import{r as n,o as s,c as a,a as t,b as p,w as o,e,d as c}from"./app.2c18be1c.js";const l={data:()=>({swtclibs:["lib","transaction","serializer","wallet","keypairs","address-codec"]})},u='{"title":"井通钱包介绍","description":"","frontmatter":{},"headers":[{"level":2,"title":"大致约定","slug":"大致约定"},{"level":2,"title":"关系","slug":"关系"},{"level":2,"title":"bip 到 swtclib 的完整示例","slug":"bip-到-swtclib-的完整示例"},{"level":2,"title":"移动开发","slug":"移动开发"}],"relativePath":"docs/wallet/README.md","lastUpdated":1631591869161}',i=e('<h1 id="井通钱包介绍" tabindex="-1">井通钱包介绍 <a class="header-anchor" href="#井通钱包介绍" aria-hidden="true">#</a></h1><p><div class="table-of-contents"><ul><li><a href="#大致约定">大致约定</a></li><li><a href="#关系">关系</a></li><li><a href="#bip-到-swtclib-的完整示例">bip 到 swtclib 的完整示例</a></li><li><a href="#移动开发">移动开发</a></li></ul></div></p><h2 id="大致约定" tabindex="-1">大致约定 <a class="header-anchor" href="#大致约定" aria-hidden="true">#</a></h2><table><thead><tr><th>名称</th><th>名称</th><th style="text-align:right;">描述</th></tr></thead><tbody><tr><td><strong>进制</strong></td><td>base-x</td><td style="text-align:right;">二进制 十进制 十六进制 五十八进制</td></tr><tr><td><strong>编码/解码</strong></td><td>encode/decode</td><td style="text-align:right;">信息的形式转换 <br> 进制转换也是一种编码/解码</td></tr><tr><td><strong>加密/解密</strong></td><td>encrypt/decrypt</td><td style="text-align:right;">信息的加密还原 <br> 属于编码/解码范畴</td></tr><tr><td><strong>签名/验签</strong></td><td>sign/verify</td><td style="text-align:right;">信息的声明确认</td></tr><tr><td><strong>密码算法</strong></td><td>crypto-algorithm</td><td style="text-align:right;">井通支持多种算法 <br>sm2p256v1(国密)/secp256k1/ed25519</td></tr><tr><td><strong>熵</strong></td><td>entropy</td><td style="text-align:right;">128 位整数</td></tr><tr><td><strong>密钥</strong></td><td>secret</td><td style="text-align:right;">base58 字符串 <br> 种子做编码得到</td></tr><tr><td><strong>私钥</strong></td><td>privateKey</td><td style="text-align:right;">256 位整数 <br> 安全由随机性保证 <br> 可以由熵单向哈希生成或者随机生成</td></tr><tr><td><strong>公钥</strong></td><td>publicKey</td><td style="text-align:right;">256 位整数 <br> 由私钥通过单向加密算法计算得到</td></tr><tr><td><strong>密钥对</strong></td><td>keypairs</td><td style="text-align:right;">私钥和公钥集合</td></tr><tr><td><strong>地址/账户</strong></td><td>address/account</td><td style="text-align:right;">base58 字符串 <br> 由公钥通过单向算法计算得到并编码</td></tr><tr><td><strong>钱包</strong></td><td>wallet</td><td style="text-align:right;">拥有密钥或者私钥即拥有对应的钱包 <br> 可以操作区块链上的资产</td></tr><tr><td><strong>比特币改进建议</strong></td><td>BIP</td><td style="text-align:right;">比特币协议/约定更新 <br> 大致通用于区块链界</td></tr><tr><td><strong>bip32/分层钱包</strong></td><td>HDWallet</td><td style="text-align:right;">使用一个主私钥管理多个私钥的改进约定 <br> 可以推导出多层次的子私钥/孙私钥等 <br> 主私钥通常记为种子/seed</td></tr><tr><td><strong>bip39/助记词</strong></td><td>Mnemonic</td><td style="text-align:right;">用助记词简化密钥/私钥的改进约定 <br> 可以由助记词确定性推导出密钥或者私钥</td></tr><tr><td><strong>bip44/规范</strong></td><td>bip44-constants</td><td style="text-align:right;">用来规范化 bip32 的私钥推导路径 <br> 是 bip43 的一种实现</td></tr></tbody></table>',4),k={class:"tip custom-block"},r=t("p",{class:"custom-block-title"},"@swtc 开发包",-1),d=t("p",null,[c("所有的@swtc 开发包使用 scoped 发布 "),t("code",null,"@swtc/lib-name")],-1),g=t("p",null,[c('const pkg = require("@swtc/'),t("span",{class:"typing"}),c('")')],-1),m=e('<h2 id="关系" tabindex="-1">关系 <a class="header-anchor" href="#关系" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">可逆计算（如 编码解码） 单向计算(如 哈希)</p></div><details class="details custom-block"><summary>代码示例</summary><div class="language-javascript"><pre><code><span class="token operator">&gt;</span> <span class="token punctuation">.</span>load ac<span class="token punctuation">.</span>js\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Keypairs <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/keypairs&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> addressCodec <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/address-codec&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> entropy <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>  <span class="token comment">// 128位整数， 0</span>\n<span class="token keyword">let</span> secret <span class="token operator">=</span> addressCodec<span class="token punctuation">.</span><span class="token function">encodeSeed</span><span class="token punctuation">(</span>entropy<span class="token punctuation">)</span>\n<span class="token keyword">let</span> secret_ed <span class="token operator">=</span> addressCodec<span class="token punctuation">.</span><span class="token function">encodeSeed</span><span class="token punctuation">(</span>entropy<span class="token punctuation">,</span> <span class="token string">&quot;ed25519&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">密钥是base58编码后的熵: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>secret<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ed25519算法的密钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>secret_ed<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;解码后：secp256k1&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addressCodec<span class="token punctuation">.</span><span class="token function">decodeSeed</span><span class="token punctuation">(</span>secret<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;解码后：ed25519&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addressCodec<span class="token punctuation">.</span><span class="token function">decodeSeed</span><span class="token punctuation">(</span>secret_ed<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ed25519私钥直接由熵哈希得到：\\n\\t</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>Keypairs<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>entropy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n密钥是base58编码后的熵<span class="token operator">:</span> sp6JS7f14BuwFY8Mw6bTtLKWauoUs\ned25519算法的密钥<span class="token operator">:</span> sEdSJHS4oiAdz7w2X2ni1gFiqtbJHqE\n解码后：secp256k1\n<span class="token punctuation">{</span>\n  version<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">33</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  bytes<span class="token operator">:</span> <span class="token operator">&lt;</span>Buffer <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;secp256k1&#39;</span>\n<span class="token punctuation">}</span>\n解码后：ed25519\n<span class="token punctuation">{</span>\n  version<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">,</span> <span class="token number">75</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  bytes<span class="token operator">:</span> <span class="token operator">&lt;</span>Buffer <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;ed25519&#39;</span>\n<span class="token punctuation">}</span>\ned25519私钥直接由熵哈希得到：\n\t<span class="token number">0</span>b6cbac838dfe7f47ea1bd0df00ec282fdf45510c92161072ccfb84035390c4d\n<span class="token keyword">undefined</span>\n<span class="token operator">&gt;</span>\n</code></pre></div></details>',3),b=e('<div class="tip custom-block"><p class="custom-block-title">私钥 -&gt; 公钥 -&gt; 地址</p></div><details class="details custom-block"><summary>代码示例</summary><div class="language-javascript"><pre><code><span class="token operator">&gt;</span> <span class="token punctuation">.</span>load pk<span class="token punctuation">.</span>js\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Keypairs <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/keypairs&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> entropy <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>  <span class="token comment">// 128位整数， 0</span>\nprivateKey <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>Keypairs<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>entropy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">私钥（ed25519）：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>privateKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> keypair <span class="token operator">=</span> Keypairs<span class="token punctuation">.</span><span class="token function">deriveKeypair</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">,</span> <span class="token string">&quot;ed25519&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keypair<span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> address <span class="token operator">=</span> Keypairs<span class="token punctuation">.</span><span class="token function">deriveAddress</span><span class="token punctuation">(</span>keypair<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">地址： </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>address<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n私钥（ed25519）：<span class="token number">0</span>B6CBAC838DFE7F47EA1BD0DF00EC282FDF45510C92161072CCFB84035390C4D\n<span class="token punctuation">{</span>\n  privateKey<span class="token operator">:</span> <span class="token string">&#39;ED0B6CBAC838DFE7F47EA1BD0DF00EC282FDF45510C92161072CCFB84035390C4D&#39;</span><span class="token punctuation">,</span>\n  publicKey<span class="token operator">:</span> <span class="token string">&#39;ED1A7C082846CFF58FF9A892BA4BA2593151CCF1DBA59F37714CC9ED39824AF85F&#39;</span>\n<span class="token punctuation">}</span>\n地址： j9zRhGj7b6xPekLvT6wP4qNdWMjyaumZS7\n<span class="token keyword">undefined</span>\n<span class="token operator">&gt;</span>\n</code></pre></div></details>',2),f=e('<div class="tip custom-block"><p class="custom-block-title">密钥 &lt;==&gt; 熵 -&gt; 私钥</p></div><details class="details custom-block"><summary>代码示例</summary><div class="language-javascript"><pre><code><span class="token operator">&gt;</span> <span class="token punctuation">.</span>load ac<span class="token punctuation">.</span>js\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Keypairs <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/keypairs&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> addressCodec <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/address-codec&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> entropy <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>  <span class="token comment">// 128位整数， 0</span>\n<span class="token keyword">let</span> secret <span class="token operator">=</span> addressCodec<span class="token punctuation">.</span><span class="token function">encodeSeed</span><span class="token punctuation">(</span>entropy<span class="token punctuation">)</span>\n<span class="token keyword">let</span> secret_ed <span class="token operator">=</span> addressCodec<span class="token punctuation">.</span><span class="token function">encodeSeed</span><span class="token punctuation">(</span>entropy<span class="token punctuation">,</span> <span class="token string">&quot;ed25519&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">密钥是base58编码后的熵: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>secret<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ed25519算法的密钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>secret_ed<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;解码后：secp256k1&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addressCodec<span class="token punctuation">.</span><span class="token function">decodeSeed</span><span class="token punctuation">(</span>secret<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;解码后：ed25519&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addressCodec<span class="token punctuation">.</span><span class="token function">decodeSeed</span><span class="token punctuation">(</span>secret_ed<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ed25519私钥直接由熵哈希得到：\\n\\t</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>Keypairs<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>entropy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n密钥是base58编码后的熵<span class="token operator">:</span> sp6JS7f14BuwFY8Mw6bTtLKWauoUs\ned25519算法的密钥<span class="token operator">:</span> sEdSJHS4oiAdz7w2X2ni1gFiqtbJHqE\n解码后：secp256k1\n<span class="token punctuation">{</span>\n  version<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">33</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  bytes<span class="token operator">:</span> <span class="token operator">&lt;</span>Buffer <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;secp256k1&#39;</span>\n<span class="token punctuation">}</span>\n解码后：ed25519\n<span class="token punctuation">{</span>\n  version<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">,</span> <span class="token number">75</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  bytes<span class="token operator">:</span> <span class="token operator">&lt;</span>Buffer <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;ed25519&#39;</span>\n<span class="token punctuation">}</span>\ned25519私钥直接由熵哈希得到：\n\t<span class="token number">0</span>b6cbac838dfe7f47ea1bd0df00ec282fdf45510c92161072ccfb84035390c4d\n<span class="token keyword">undefined</span>\n<span class="token operator">&gt;</span>\n</code></pre></div></details>',2),y=e('<div class="tip custom-block"><p class="custom-block-title">加密算法 影响 熵-&gt;密钥 私钥-&gt;公钥 签名/验签</p></div><details class="details custom-block"><summary>代码示例</summary><div class="language-javascript"><pre><code><span class="token operator">&gt;</span> <span class="token punctuation">.</span>load ac<span class="token punctuation">.</span>js\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Keypairs <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/keypairs&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> addressCodec <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/address-codec&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> entropy <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>  <span class="token comment">// 128位整数， 0</span>\n<span class="token keyword">let</span> secret <span class="token operator">=</span> addressCodec<span class="token punctuation">.</span><span class="token function">encodeSeed</span><span class="token punctuation">(</span>entropy<span class="token punctuation">)</span>\n<span class="token keyword">let</span> secret_ed <span class="token operator">=</span> addressCodec<span class="token punctuation">.</span><span class="token function">encodeSeed</span><span class="token punctuation">(</span>entropy<span class="token punctuation">,</span> <span class="token string">&quot;ed25519&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">密钥是base58编码后的熵: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>secret<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ed25519算法的密钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>secret_ed<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;解码后：secp256k1&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addressCodec<span class="token punctuation">.</span><span class="token function">decodeSeed</span><span class="token punctuation">(</span>secret<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;解码后：ed25519&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addressCodec<span class="token punctuation">.</span><span class="token function">decodeSeed</span><span class="token punctuation">(</span>secret_ed<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ed25519私钥直接由熵哈希得到：\\n\\t</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>Keypairs<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>entropy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> keypairs <span class="token operator">=</span> Keypairs<span class="token punctuation">.</span><span class="token function">deriveKeypair</span><span class="token punctuation">(</span>secret<span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;密钥对：(sec256k1私钥加了前缀00)&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keypairs<span class="token punctuation">)</span>\n<span class="token keyword">let</span> keypairs_ed <span class="token operator">=</span> Keypairs<span class="token punctuation">.</span><span class="token function">deriveKeypair</span><span class="token punctuation">(</span>secret_ed<span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;密钥对：(ed25519加了前缀ED)&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keypairs_ed<span class="token punctuation">)</span>\n\n密钥是base58编码后的熵<span class="token operator">:</span> sp6JS7f14BuwFY8Mw6bTtLKWauoUs\ned25519算法的密钥<span class="token operator">:</span> sEdSJHS4oiAdz7w2X2ni1gFiqtbJHqE\n解码后：secp256k1\n\n<span class="token punctuation">{</span>\n  version<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">33</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  bytes<span class="token operator">:</span> <span class="token operator">&lt;</span>Buffer <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;secp256k1&#39;</span>\n<span class="token punctuation">}</span>\n\n解码后：ed25519\n\n<span class="token punctuation">{</span>\n  version<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">,</span> <span class="token number">75</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  bytes<span class="token operator">:</span> <span class="token operator">&lt;</span>Buffer <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span> <span class="token number">00</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;ed25519&#39;</span>\n<span class="token punctuation">}</span>\n\ned25519私钥直接由熵哈希得到：\n\t<span class="token number">0</span>b6cbac838dfe7f47ea1bd0df00ec282fdf45510c92161072ccfb84035390c4d\n<span class="token function">密钥对：</span><span class="token punctuation">(</span><span class="token parameter">sec256k1私钥加了前缀<span class="token number">00</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n  privateKey<span class="token operator">:</span> <span class="token string">&#39;002512BBDFDBB77510883B7DCCBEF270B86DEAC8B64AC762873D75A1BEE6298665&#39;</span><span class="token punctuation">,</span>\n  publicKey<span class="token operator">:</span> <span class="token string">&#39;0390A196799EE412284A5D80BF78C3E84CBB80E1437A0AECD9ADF94D7FEAAFA284&#39;</span>\n<span class="token punctuation">}</span>\n<span class="token function">密钥对：</span><span class="token punctuation">(</span><span class="token parameter">ed25519加了前缀<span class="token constant">ED</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n  privateKey<span class="token operator">:</span> <span class="token string">&#39;ED0B6CBAC838DFE7F47EA1BD0DF00EC282FDF45510C92161072CCFB84035390C4D&#39;</span><span class="token punctuation">,</span>\n  publicKey<span class="token operator">:</span> <span class="token string">&#39;ED1A7C082846CFF58FF9A892BA4BA2593151CCF1DBA59F37714CC9ED39824AF85F&#39;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">undefined</span>\n<span class="token operator">&gt;</span>\n</code></pre></div></details>',2),q=e('<div class="tip custom-block"><p class="custom-block-title">BIP32 种子 -&gt; 子孙后代私钥</p><p>每代都有兄弟私钥<br> 一个种子私钥管理许多钱包<br> 推导路径 m/g1/g2/g3/g4/...</p></div><details class="details custom-block"><summary>代码演示</summary><div class="language-javascript"><div class="highlight-lines"><br><br><br><br><br><br><div class="highlighted"> </div><br><br><br><br><br><br><br><br><br><br><br></div><pre><code><span class="token operator">&gt;</span> <span class="token punctuation">.</span>load test<span class="token punctuation">.</span>js\n<span class="token keyword">const</span> bip39 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bip39&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> bip32 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bip32&quot;</span><span class="token punctuation">)</span>\nbip39<span class="token punctuation">.</span><span class="token function">setDefaultWordlist</span><span class="token punctuation">(</span><span class="token string">&quot;chinese_simplified&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> mnemonic <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">entropyToMnemonic</span><span class="token punctuation">(</span><span class="token string">&#39;00000000000000000000000000000000&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> seed <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">mnemonicToSeedSync</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span>\nb32 <span class="token operator">=</span> bip32<span class="token punctuation">.</span><span class="token function">fromSeed</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">主节点 私钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>b32<span class="token punctuation">.</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\nson_son <span class="token operator">=</span> b32<span class="token punctuation">.</span><span class="token function">derivePath</span><span class="token punctuation">(</span><span class="token string">&quot;m/0/1&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">孙节点 m/0/1: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>son_son<span class="token punctuation">.</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n主节点 私钥<span class="token operator">:</span> de515c704d69559b2ad1bd1724cd400097fa5c7b94cce4249f4198239f3e1af2\n孙节点 m<span class="token operator">/</span><span class="token number">0</span><span class="token operator">/</span><span class="token number">1</span><span class="token operator">:</span> be72cf3eb3c9e5155d3d9cad768f862fdd609ccb3a227f4c596bb1d0885d1e87\n<span class="token keyword">undefined</span>\n<span class="token operator">&gt;</span>\n</code></pre></div></details>',2),h=e('<div class="tip custom-block"><p class="custom-block-title">BIP39 助记词 -&gt; 熵 助记词 -&gt; 私钥/种子</p><p>助记词代替密钥或者私钥的管理</p></div><details class="details custom-block"><summary>代码示例</summary><div class="language-javascript"><pre><code><span class="token operator">&gt;</span> <span class="token punctuation">.</span>load test<span class="token punctuation">.</span>js\n<span class="token keyword">const</span> bip39 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bip39&quot;</span><span class="token punctuation">)</span>\nbip39<span class="token punctuation">.</span><span class="token function">setDefaultWordlist</span><span class="token punctuation">(</span><span class="token string">&quot;chinese_simplified&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> mnemonic <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">entropyToMnemonic</span><span class="token punctuation">(</span><span class="token string">&#39;00000000000000000000000000000000&#39;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> entropy <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">mnemonicToEntropy</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span>\n<span class="token keyword">let</span> seed <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">mnemonicToSeedSync</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">助记词 到 熵: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>entropy<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">助记词 到 种子: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>seed<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n的 的 的 的 的 的 的 的 的 的 的 在\n助记词 到 熵<span class="token operator">:</span> <span class="token number">00000000000000000000000000000000</span>\n助记词 到 种子<span class="token operator">:</span> c015b86e4b208402bb0bdd0febb746708b869bb6e433cb227fd66d444f3ccdc360fee9ca9271014c2a684df380fcc40bd80a37eaa41a8061a52a18d319cdd899\n<span class="token keyword">undefined</span>\n<span class="token operator">&gt;</span>\n</code></pre></div></details>',2),v=e('<div class="tip custom-block"><p class="custom-block-title">BIP44 规范化 bip32</p><p>一个种子私钥管理许多钱包, 许多通证<br> bip43 的一个实例<br> 314 0x8000013a MOAC MOAC<br> 315 0x8000013b SWTC SWTC<br> 推导路径 m/44&#39;/token&#39;/a&#39;/0/i</p></div><details class="details custom-block"><summary>代码演示</summary><div class="language-javascript"><pre><code><span class="token operator">&gt;</span> <span class="token punctuation">.</span>load t<span class="token punctuation">.</span>js\n<span class="token keyword">const</span> bip39 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bip39&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> bip32 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bip32&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> constants <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bip44-constants&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getCoin</span> <span class="token operator">=</span> <span class="token parameter">coin</span> <span class="token operator">=&gt;</span> constants<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> coin<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token constant">SWTC</span> <span class="token operator">=</span> <span class="token function">getCoin</span><span class="token punctuation">(</span><span class="token string">&#39;SWTC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span>\n<span class="token keyword">const</span> <span class="token constant">MOAC</span> <span class="token operator">=</span> <span class="token function">getCoin</span><span class="token punctuation">(</span><span class="token string">&#39;MOAC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">SWTC</span><span class="token punctuation">)</span>\nbip39<span class="token punctuation">.</span><span class="token function">setDefaultWordlist</span><span class="token punctuation">(</span><span class="token string">&quot;chinese_simplified&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> mnemonic <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">entropyToMnemonic</span><span class="token punctuation">(</span><span class="token string">&#39;00000000000000000000000000000000&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> seed <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">mnemonicToSeedSync</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span>\nb32 <span class="token operator">=</span> bip32<span class="token punctuation">.</span><span class="token function">fromSeed</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">主节点 私钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>b32<span class="token punctuation">.</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> private_key_moac <span class="token operator">=</span> b32<span class="token punctuation">.</span><span class="token function">derivePath</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">m/44&#39;/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">MOAC</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;/0&#39;/0/0</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>privateKey\n<span class="token keyword">let</span> private_key_swtc <span class="token operator">=</span> b32<span class="token punctuation">.</span><span class="token function">derivePath</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">m/44&#39;/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">SWTC</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;/0&#39;/0/0</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>privateKey\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">墨客 第一个私钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>private_key_moac<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">井通 第一个私钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>private_key_swtc<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n<span class="token number">315</span>\n主节点 私钥<span class="token operator">:</span> de515c704d69559b2ad1bd1724cd400097fa5c7b94cce4249f4198239f3e1af2\n墨客 第一个私钥<span class="token operator">:</span> <span class="token number">0e380</span>e7f29a9bdbf0d04e8933e625d244737154b095edcc14dadffb8ae707b01\n井通 第一个私钥<span class="token operator">:</span> <span class="token number">42</span>f255cd10c52ddda2af360b6561caf3275c02bd2e5fce6886c6ddc389ba72e9\n<span class="token keyword">undefined</span>\n<span class="token operator">&gt;</span>\n</code></pre></div></details>',2),w=e('<h2 id="bip-到-swtclib-的完整示例" tabindex="-1">bip 到 swtclib 的完整示例 <a class="header-anchor" href="#bip-到-swtclib-的完整示例" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">bip39 -&gt; 钱包</p><p>助记词(bip39) -&gt; 密钥+钱包(swtclib) <br> 助记词(bip39) -&gt; 种子(bip32) -&gt; 私钥(bip44) -&gt; 钱包(swtclib)</p></div><details class="details custom-block"><summary>代码</summary><div class="language-javascript"><pre><code><span class="token operator">&gt;</span> <span class="token punctuation">.</span>load test<span class="token punctuation">.</span>js\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Wallet <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/wallet&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> Keypair <span class="token operator">=</span> Wallet<span class="token punctuation">.</span>KeyPair\n<span class="token keyword">const</span> addressCodec <span class="token operator">=</span> Keypair<span class="token punctuation">.</span>addressCodec\n<span class="token keyword">const</span> bip39 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bip39&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> bip32 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bip32&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> constants <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bip44-constants&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getCoin</span> <span class="token operator">=</span> <span class="token parameter">coin</span> <span class="token operator">=&gt;</span> constants<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> coin<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token constant">SWTC</span> <span class="token operator">=</span> <span class="token function">getCoin</span><span class="token punctuation">(</span><span class="token string">&#39;SWTC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">SWTC</span><span class="token punctuation">)</span>\nbip39<span class="token punctuation">.</span><span class="token function">setDefaultWordlist</span><span class="token punctuation">(</span><span class="token string">&quot;chinese_simplified&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> mnemonic<span class="token punctuation">,</span> seed<span class="token punctuation">,</span> entropy<span class="token punctuation">,</span> secret<span class="token punctuation">,</span> privateKey<span class="token punctuation">,</span> publicKey<span class="token punctuation">,</span> address<span class="token punctuation">,</span> wallet\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> length <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">192</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tmnemonic <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">generateMnemonic</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\n随机助记词-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>length <span class="token operator">/</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mnemonic<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\tentropy <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">mnemonicToEntropy</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t熵  : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>entropy<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t\\t密钥-secp256k1: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>addressCodec<span class="token punctuation">.</span><span class="token function">encodeSeed</span><span class="token punctuation">(</span>entropy<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t\\t密钥-ed25519  : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>addressCodec<span class="token punctuation">.</span><span class="token function">encodeSeed</span><span class="token punctuation">(</span>entropy<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;ed25519&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\tseed <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">mnemonicToSeedSync</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t种子: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>seed<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\tb32 <span class="token operator">=</span> bip32<span class="token punctuation">.</span><span class="token function">fromSeed</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span>\n\tprivateKey <span class="token operator">=</span> b32<span class="token punctuation">.</span><span class="token function">derivePath</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">m/44&#39;/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">SWTC</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;/0&#39;/0/0</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>privateKey\n\twallet <span class="token operator">=</span> Wallet<span class="token punctuation">.</span><span class="token function">fromSecret</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t井通第一私钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t\\t井通地址-secp256k1: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wallet<span class="token punctuation">.</span>address<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\twallet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Wallet</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ed25519&quot;</span><span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t\\t井通地址-ed25519  : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wallet<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\tprivateKey <span class="token operator">=</span> b32<span class="token punctuation">.</span><span class="token function">derivePath</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">m/44&#39;/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">SWTC</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;/0&#39;/0/1</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>privateKey\n\twallet <span class="token operator">=</span> Wallet<span class="token punctuation">.</span><span class="token function">fromSecret</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t井通第二私钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t\\t井通地址-secp256k1: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wallet<span class="token punctuation">.</span>address<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\twallet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Wallet</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ed25519&quot;</span><span class="token punctuation">)</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t\\t井通地址-ed25519  : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wallet<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nentropy <span class="token operator">=</span> <span class="token string">&#39;00000000000000000000000000000000&#39;</span>\nmnemonic <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">entropyToMnemonic</span><span class="token punctuation">(</span>entropy<span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\n\\n零号助记词-12: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mnemonic<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">零号熵  : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>entropy<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t零号密钥-secp256k1: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>addressCodec<span class="token punctuation">.</span><span class="token function">encodeSeed</span><span class="token punctuation">(</span>entropy<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t零号密钥-ed25519  : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>addressCodec<span class="token punctuation">.</span><span class="token function">encodeSeed</span><span class="token punctuation">(</span>entropy<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;ed25519&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nseed <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">mnemonicToSeedSync</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span>\nb32 <span class="token operator">=</span> bip32<span class="token punctuation">.</span><span class="token function">fromSeed</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">零号种子: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>seed<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nprivateKey <span class="token operator">=</span> b32<span class="token punctuation">.</span><span class="token function">derivePath</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">m/44&#39;/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">SWTC</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;/0&#39;/0/0</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>privateKey\nwallet <span class="token operator">=</span> Wallet<span class="token punctuation">.</span><span class="token function">fromSecret</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">零号井通第一私钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t井通地址-secp256k1: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wallet<span class="token punctuation">.</span>address<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nwallet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Wallet</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ed25519&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t井通地址-ed25519  : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wallet<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nprivateKey <span class="token operator">=</span> b32<span class="token punctuation">.</span><span class="token function">derivePath</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">m/44&#39;/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">SWTC</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;/0&#39;/0/1</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>privateKey\nwallet <span class="token operator">=</span> Wallet<span class="token punctuation">.</span><span class="token function">fromSecret</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">零号井通第二私钥: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t井通地址-secp256k1: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wallet<span class="token punctuation">.</span>address<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\nwallet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Wallet</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ed25519&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\t井通地址-ed25519  : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wallet<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n<span class="token number">315</span>\n\n随机助记词<span class="token operator">-</span><span class="token number">12</span><span class="token operator">:</span> 仍 益 物 曾 江 认 缘 劲 烷 吞 胎 右\n\t熵  <span class="token operator">:</span> <span class="token number">592</span>ab82a28e3924a2ae617ec5fefde26\n\t\t密钥<span class="token operator">-</span>secp256k1<span class="token operator">:</span> spm4RJdtoYsBTAFbpAfoMvjBoHPVx\n\t\t密钥<span class="token operator">-</span>ed25519  <span class="token operator">:</span> sEdS4MRDKt4z37oyZoxaQpJSXZqzRmX\n\t种子<span class="token operator">:</span> <span class="token number">6465</span>fe3ea42c889aed804c1420825d71f36840a01d0a3cafa1c73a363fe2850bb526b9b6a1eb2821f17b3e91931e53459bb5438540e63a6851a562772ca13717\n\t井通第一私钥<span class="token operator">:</span> f607013f4b8abe69662b15d67bd20984c3fad75ac0445086366fad2a8bfbf27e\n\t\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> jwenxJr3QpgP1mfG1WRNQVgTtJTnENg9pr\n\t\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jNnRGAAop12SP9UqnoJhAH8SU7PARWm3dr\n\t井通第二私钥<span class="token operator">:</span> b602e00170e1780a7ea20425af3d39be6c93b4330ad3f5a576f10ab4dba4610f\n\t\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> jpx7yVoGP5obo3YADVMFvHwR7vkiTSwy3D\n\t\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jfpVYMH6J9JRA19ofmFg6reabMJqB8xy7Y\n\n随机助记词<span class="token operator">-</span><span class="token number">15</span><span class="token operator">:</span> 船 无 提 孔 坝 近 敬 云 照 代 巷 亭 流 仔 岩\n\t熵  <span class="token operator">:</span> <span class="token number">4</span>d22a85baf0fda64adb2de3ce2cbf77471b1b85e\n\t\t密钥<span class="token operator">-</span>secp256k1<span class="token operator">:</span> spkXuWBt7eML37Aed2WywpiziVQAQ\n\t\t密钥<span class="token operator">-</span>ed25519  <span class="token operator">:</span> sEdSMWuQ1thaSd7Wg1YroUaZPLMddqv\n\t种子<span class="token operator">:</span> <span class="token number">12189</span>ea71c85362749ba7189ff97ff5e341509528335685d6aad15e0f995a045a63ec09e6d7a7ee91e739717e3f3343ac90c975cc1dd6bfd5ec08145ae9222c3\n\t井通第一私钥<span class="token operator">:</span> b506f77179aed1421308fe931518c8caf01e9d19ec6027518b7d0e9f62431420\n\t\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> jDotHnnyzAvEUG7UYPjt5CL15M7GxaVbh9\n\t\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jfg7KsrmS9s1mDXnUAbmEha3xYZfsTRBMv\n\t井通第二私钥<span class="token operator">:</span> <span class="token number">92</span>f70e88a55b9619617feac8aaa7a28b098e4b9e982ab5d479d1ddcb13024701\n\t\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> jKgkp8pYeaXKHmKCTWLTGx8FshtsJPFm1v\n\t\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jD91q5Et9iBLSzaGGo2TAxYgkSssjUXMZJ\n\n随机助记词<span class="token operator">-</span><span class="token number">18</span><span class="token operator">:</span> 捕 串 鸭 刷 拜 位 祖 究 瓶 玄 领 甜 粮 比 芽 飞 怪 舟\n\t熵  <span class="token operator">:</span> <span class="token number">8</span>eba1b2eed4d6830dba979c11fc888f0864e256d8a79aa76\n\t\t密钥<span class="token operator">-</span>secp256k1<span class="token operator">:</span> spom44bcbddtcE3Ww8ce5hK8LeE6f\n\t\t密钥<span class="token operator">-</span>ed25519  <span class="token operator">:</span> sEdSQk4HHcBnrBxG1rnAt1e2i9PKYja\n\t种子<span class="token operator">:</span> b341006738d7932ac2ea9fcb5e0e2327df440c084318f55929b7d7fc78401e54785f6e73faf67cf7f11818f3366ea4f161597a8b17a600c07af88d2a78e0ff45\n\t井通第一私钥<span class="token operator">:</span> d1361359a6a8ee2cab0220639ef55da9674da840dbfd784f42513c6730eb04e4\n\t\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> jJdxsAj566yfHMXdrDJ5ptrTcE4BkmFZoa\n\t\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jsEhK82PMv5qpguDmp2VQ7TdmVAF6Y1bR6\n\t井通第二私钥<span class="token operator">:</span> <span class="token number">6</span>caeeaffb7c2b009ce86bde616020759280379d00af677ba6f7f0575e2da84c2\n\t\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> j9M4ntwhuFgt97VSh1CprFE83QdERNGj6b\n\t\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jsUT2ErEBC5cYydXDaMZ3EWdpKBgjHrzoE\n\n随机助记词<span class="token operator">-</span><span class="token number">21</span><span class="token operator">:</span> 挖 炼 危 程 房 桂 氢 浓 童 扫 童 肠 依 弓 况 算 鞋 恩 善 更 芳\n\t熵  <span class="token operator">:</span> b152c9d50bb56b7a1c4bdaa3f6328ffd555fc70b217fdcd2b1969349\n\t\t密钥<span class="token operator">-</span>secp256k1<span class="token operator">:</span> sp6JdJjxnH3GuHB8o1PN9NyrWZnAX\n\t\t密钥<span class="token operator">-</span>ed25519  <span class="token operator">:</span> sEdSJHdU6AerD2EJAjrpCTnmWnr36SM\n\t种子<span class="token operator">:</span> <span class="token number">37</span>db9f1803178f1f6e0612dbcb2e51952abdb881b4368b6df7f4e49ce761a171dac5bad6c77ab1f4bf06f6a4a937a42625fb84e96031466355abf7f8e75c431a\n\t井通第一私钥<span class="token operator">:</span> f17614d4f84f3760feccd0b9e0fa23fa2c2fd5461c60eafc8eb5d03212ab255d\n\t\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> jhU7KMy4XydStNjivx5dV7jyee5XHs1qGL\n\t\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jhg6rLuyL3E8PfbPAs4nCJCAy6pW6RnqYN\n\t井通第二私钥<span class="token operator">:</span> <span class="token number">08</span>b9ce03c0ed507444c95276b3277f8738e30fdeef8da7e399e617a95227305a\n\t\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> jPmU9NHSn3H97uD8yxQYeVoDZNYRxpSCrc\n\t\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> j4BVdRBcYWEHg6d3KZpvttjLiJcHRUZrF3\n\n随机助记词<span class="token operator">-</span><span class="token number">24</span><span class="token operator">:</span> 董 良 减 浇 阴 是 侨 蒸 削 伍 田 贵 谈 洁 茎 轴 圈 融 公 扣 鼓 答 吗 袭\n\t熵  <span class="token operator">:</span> eecaa515eda88600b523c7a075f12a34740565f8c2aa879a2854ebe7d0d718ce\n\t\t密钥<span class="token operator">-</span>secp256k1<span class="token operator">:</span> sp6JS7f14Lpf6zzRkjKxDgtjucMYx\n\t\t密钥<span class="token operator">-</span>ed25519  <span class="token operator">:</span> sEdSJHS4oiA8fRhpreCwcBwDQTBmE2R\n\t种子<span class="token operator">:</span> <span class="token number">996e4</span>efec5bdd2e90654d4e66834f9108e7515c852de92f669ac224f5f90819fb59d362f65c3576ece927632ada95295892c8463dfa7bb5462c369ae0d34450f\n\t井通第一私钥<span class="token operator">:</span> <span class="token number">463552</span>f46b10b25050b60d0cfab0a6139a37c07f49bb3c2947ac9de18af3aba6\n\t\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> jEmskT6pGngn6HcLi5j9gdvYKdfqa6wWnX\n\t\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jPyYKHr96mcbTYfrf8hmQFC1XSwCYF8Es1\n\t井通第二私钥<span class="token operator">:</span> <span class="token number">2e3</span>d518ed16d6741a9e45d0dde20529c740dd69c0cd87662150436e758da34f7\n\t\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> jL4XiAJ4JtC7MTGouViCS8qA2MWooNrRAG\n\t\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jQESz4B47AKbMSdEyPxkGzBuc2HDQRE3Wo\n\n\n零号助记词<span class="token operator">-</span><span class="token number">12</span><span class="token operator">:</span> 的 的 的 的 的 的 的 的 的 的 的 在\n零号熵  <span class="token operator">:</span> <span class="token number">00000000000000000000000000000000</span>\n\t零号密钥<span class="token operator">-</span>secp256k1<span class="token operator">:</span> sp6JS7f14BuwFY8Mw6bTtLKWauoUs\n\t零号密钥<span class="token operator">-</span>ed25519  <span class="token operator">:</span> sEdSJHS4oiAdz7w2X2ni1gFiqtbJHqE\n零号种子<span class="token operator">:</span> c015b86e4b208402bb0bdd0febb746708b869bb6e433cb227fd66d444f3ccdc360fee9ca9271014c2a684df380fcc40bd80a37eaa41a8061a52a18d319cdd899\n零号井通第一私钥<span class="token operator">:</span> <span class="token number">42</span>f255cd10c52ddda2af360b6561caf3275c02bd2e5fce6886c6ddc389ba72e9\n\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> jLnwXgBewnGXL3a6e24DpQXmzcc6gabTUb\n\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jJPqLrNGcwWmCxEmgpBCnEAbfWuAr2Au96\n零号井通第二私钥<span class="token operator">:</span> <span class="token number">5</span>f339a90404ced22eeedd48fbad16c80db83660b93aea3ff131781b75a8283ca\n\t井通地址<span class="token operator">-</span>secp256k1<span class="token operator">:</span> j4XfDGzF57yKNAs3ndxQ6h98Ruwy5NR8h9\n\t井通地址<span class="token operator">-</span>ed25519  <span class="token operator">:</span> jwD2SNQhGnGT1fNHSnkfsHdTE4cLRaUm13\n<span class="token keyword">undefined</span>\n<span class="token operator">&gt;</span>\n</code></pre></div></details><h2 id="移动开发" tabindex="-1">移动开发 <a class="header-anchor" href="#移动开发" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">开发框架</p><p><code>npm install -g nativescript</code></p></div><details class="details custom-block"><summary>代码</summary><div class="language-shell"><pre><code>Documents xcliu$ ns create bipapp --js\nDocuments xcliu$ <span class="token builtin class-name">cd</span> bipapp\nbipapp xcliu$ <span class="token function">npm</span> <span class="token function">install</span> bip32 bip39 @swtc/wallet @swtc/nativescript\nbipapp xcliu$ <span class="token builtin class-name">echo</span> <span class="token string">&quot;更新webpack配置 更新程序引入bip和swtc&quot;</span>\nbipapp xcliu$ <span class="token function">git</span> <span class="token function">diff</span>\n<span class="token function">diff</span> --git a/webpack.config.js b/webpack.config.js\nindex 4e59599<span class="token punctuation">..</span>bde3a35 <span class="token number">100644</span>\n--- a/webpack.config.js\n+++ b/webpack.config.js\n@@ -135,7 +135,7 @@ module.exports <span class="token operator">=</span> <span class="token function">env</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n                 <span class="token variable"><span class="token variable">`</span>node_modules/$<span class="token punctuation">{</span>coreModulesPackageName<span class="token punctuation">}</span><span class="token variable">`</span></span>,\n                 <span class="token string">&quot;node_modules&quot;</span>,\n             <span class="token punctuation">]</span>,\n-            alias: Object.assign<span class="token punctuation">(</span>alias, require<span class="token punctuation">(</span><span class="token string">&quot;@swtc/nativescript&quot;</span><span class="token punctuation">)</span>.aliases<span class="token punctuation">)</span>,\n+            alias,\n             // resolve symlinks to symlinked modules\n             symlinks: <span class="token boolean">true</span>\n         <span class="token punctuation">}</span>,\n@@ -264,8 +264,8 @@ module.exports <span class="token operator">=</span> <span class="token function">env</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n             new webpack.DefinePlugin<span class="token punctuation">(</span><span class="token punctuation">{</span>\n                 <span class="token string">&quot;global.TNS_WEBPACK&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;true&quot;</span>,\n                 <span class="token string">&quot;global.isAndroid&quot;</span><span class="token builtin class-name">:</span> platform <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">&#39;android&#39;</span>,\n-                <span class="token string">&quot;global.isIOS&quot;</span><span class="token builtin class-name">:</span> platform <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">&#39;ios&#39;</span>\n-                // <span class="token string">&quot;process&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;global.process&quot;</span>,\n+                <span class="token string">&quot;global.isIOS&quot;</span><span class="token builtin class-name">:</span> platform <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">&#39;ios&#39;</span>,\n+                <span class="token string">&quot;process&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;global.process&quot;</span>,\n             <span class="token punctuation">}</span><span class="token punctuation">)</span>,\n             // Remove all files from the out dir.\n             new CleanWebpackPlugin<span class="token punctuation">(</span><span class="token punctuation">{</span>\nbipapp xcliu$ <span class="token function">git</span> <span class="token function">diff</span> app\n<span class="token function">diff</span> --git a/src/main-view-model.ts b/src/main-view-model.ts\nindex 39e86c5<span class="token punctuation">..</span>9d7aef2 <span class="token number">100644</span>\n--- a/src/main-view-model.ts\n+++ b/src/main-view-model.ts\n@@ -1,14 +1,25 @@\n <span class="token function">import</span> <span class="token punctuation">{</span> Observable <span class="token punctuation">}</span> from <span class="token string">&#39;@nativescript/core&#39;</span><span class="token punctuation">;</span>\n+import <span class="token punctuation">{</span> Wallet <span class="token punctuation">}</span> from <span class="token string">&quot;@swtc/wallet&quot;</span><span class="token punctuation">;</span>\n+import <span class="token punctuation">{</span> BIP32Interface, fromSeed <span class="token punctuation">}</span> from <span class="token string">&quot;bip32&quot;</span>\n+import <span class="token punctuation">{</span> getDefaultWordlist, setDefaultWordlist, generateMnemonic, mnemonicToSeedSync <span class="token punctuation">}</span> from <span class="token string">&quot;bip39&quot;</span>\n+\n+setDefaultWordlist<span class="token punctuation">(</span><span class="token string">&#39;chinese_simplified&#39;</span><span class="token punctuation">)</span>\n+let mnemonic: string <span class="token operator">=</span> generateMnemonic<span class="token punctuation">(</span><span class="token punctuation">)</span>\n+let b32: BIP32Interface\n\n <span class="token builtin class-name">export</span> class HelloWorldModel extends Observable <span class="token punctuation">{</span>\n     private _counter: number<span class="token punctuation">;</span>\n     private _message: string<span class="token punctuation">;</span>\n+    private _mnemonic: string<span class="token punctuation">;</span>\n+    private _seed: Buffer<span class="token punctuation">;</span>\n\n-    <span class="token function-name function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n+    constructor<span class="token punctuation">(</span>mnemonic: string <span class="token operator">=</span> generateMnemonic<span class="token punctuation">(</span><span class="token punctuation">))</span> <span class="token punctuation">{</span>\n         super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n         // Initialize default values.\n         this._counter <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>\n+        this._mnemonic <span class="token operator">=</span> mnemonic\n+        this._seed <span class="token operator">=</span> mnemonicToSeedSync<span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span>\n         this.updateMessage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token punctuation">}</span>\n\n@@ -25,6 +36,8 @@ <span class="token builtin class-name">export</span> class HelloWorldModel extends Observable <span class="token punctuation">{</span>\n\n     <span class="token function-name function">onTap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n         this._counter--<span class="token punctuation">;</span>\n+        this._mnemonic <span class="token operator">=</span> generateMnemonic<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n+        this._seed <span class="token operator">=</span> mnemonicToSeedSync<span class="token punctuation">(</span>this._mnemonic<span class="token punctuation">)</span>\n         this.updateMessage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token punctuation">}</span>\n\n@@ -33,7 +46,10 @@ <span class="token builtin class-name">export</span> class HelloWorldModel extends Observable <span class="token punctuation">{</span>\n             this.message <span class="token operator">=</span>\n                 <span class="token string">&#39;Hoorraaay! You unlocked the NativeScript clicker achievement!&#39;</span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n-            this.message <span class="token operator">=</span> <span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span>this._counter<span class="token punctuation">}</span> taps left<span class="token variable">`</span></span><span class="token punctuation">;</span>\n+            this.message <span class="token operator">=</span> <span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span>this._counter<span class="token punctuation">}</span> taps left\n+$<span class="token punctuation">{</span>this._mnemonic<span class="token punctuation">}</span>\n+seed: $<span class="token punctuation">{</span>this._seed.toString<span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n+<span class="token variable">`</span></span><span class="token punctuation">;</span>\n         <span class="token punctuation">}</span>\n     <span class="token punctuation">}</span>\n <span class="token punctuation">}</span>\nbipapp xcliu$ ns run android\n</code></pre></div></details>',6);l.render=function(e,c,l,u,_,S){const C=n("vue-typed-js"),x=n("Mermaid");return s(),a("div",null,[i,t("div",k,[r,d,p(C,{strings:_.swtclibs},{default:o((()=>[g])),_:1},8,["strings"])]),m,p(x,{id:"mermaid_64a5691c",graph:"stateDiagram\n  密钥 --\x3e 熵 : 解码\n  熵 --\x3e 密钥 : 编码\n  熵 --\x3e 私钥 : 哈希\n"}),b,p(x,{id:"mermaid_64a568e6",graph:"graph LR\n    privateKey((私钥)) --\x3e|单向计算| publicKey(公钥) --\x3e|单向计算| address(地址/帐号)\n"}),f,p(x,{id:"mermaid_64a568da",graph:"graph LR\n  secret((密钥)) ---|编码解码| entropy((熵)) --\x3e|单向计算| privateKey((私钥))\n"}),y,p(x,{id:"mermaid_64a568a4",graph:"graph LR\n   密钥secp256k1 & 密钥ed25519 ---|编码解码| 熵 --\x3e|单向计算| 私钥 --\x3e|单向计算| 公钥secp256k1 & 公钥ed25519\n   公钥secp256k1 --\x3e|单向计算| 地址secp256k1\n   公钥ed25519 --\x3e|单向计算| 地址ed25519\n"}),q,p(x,{id:"mermaid_64a56868",graph:"graph LR\n   seed((种子)) --\x3e|单向计算| 子代私钥i --\x3e|单向计算| 孙代私钥x --\x3e ...下代私钥I\n"}),h,p(x,{id:"mermaid_64a5682c",graph:"graph LR\n   mnemonic((助记词)) ---|编码解码| entropy((熵))\n   mnemonic((助记词)) --\x3e|单向计算| privateKey((私钥/种子))\n"}),v,p(x,{id:"mermaid_64a567f0",graph:"graph LR\n   seed((种子)) --\x3e|单向计算| m/44'/token'/a'/0/i\n"}),w])};export{u as __pageData,l as default};
