import{o as a,c as e,e as i}from"./app.d26c9b00.js";const r='{"title":"浏览器运行时环境","description":"","frontmatter":{},"headers":[{"level":2,"title":"准备","slug":"准备"}],"relativePath":"docs/examples/W00/index.md","lastUpdated":1631590646668}',s={},t=[i('<h1 id="浏览器运行时环境" tabindex="-1">浏览器运行时环境 <a class="header-anchor" href="#浏览器运行时环境" aria-hidden="true">#</a></h1><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-hidden="true">#</a></h2><ol><li><h4 id="javascript-诞生于浏览器环境中" tabindex="-1">javascript 诞生于浏览器环境中 <a class="header-anchor" href="#javascript-诞生于浏览器环境中" aria-hidden="true">#</a></h4></li><li><h4 id="javascript-可以直接操作-dom" tabindex="-1">javascript 可以直接操作 DOM <a class="header-anchor" href="#javascript-可以直接操作-dom" aria-hidden="true">#</a></h4></li><li><h4 id="浏览器中的-javascript-相比较-node-js-缺少一些内置的库，-所以多数-node-js-库不能直接引用" tabindex="-1">浏览器中的 javascript 相比较 node.js, 缺少一些内置的库， 所以多数 node.js 库不能直接引用 <a class="header-anchor" href="#浏览器中的-javascript-相比较-node-js-缺少一些内置的库，-所以多数-node-js-库不能直接引用" aria-hidden="true">#</a></h4></li><li><h4 id="bundlers-webpack-broserify-可以用来从-node-js-应用-打包成-浏览器的应用" tabindex="-1">bundlers (webpack, broserify) 可以用来从 node.js 应用 打包成 浏览器的应用 <a class="header-anchor" href="#bundlers-webpack-broserify-可以用来从-node-js-应用-打包成-浏览器的应用" aria-hidden="true">#</a></h4></li><li><h4 id="swtc-x-lib-swtc-lib-swtc-api-swtc-transaction-swtc-wallet-浏览器版本库可以直接从-cdn-引用" tabindex="-1">@swtc/x-lib @swtc/lib @swtc/api @swtc/transaction @swtc/wallet <a href="./../../../">浏览器版本库可以直接从 CDN 引用</a> <a class="header-anchor" href="#swtc-x-lib-swtc-lib-swtc-api-swtc-transaction-swtc-wallet-浏览器版本库可以直接从-cdn-引用" aria-hidden="true">#</a></h4></li></ol>',3)];s.render=function(i,r,s,d,c,n){return a(),e("div",null,t)};export{r as __pageData,s as default};
