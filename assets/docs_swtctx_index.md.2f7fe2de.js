import{o as n,c as s,e as a}from"./app.2c18be1c.js";const t='{"title":"swtc-transaction","description":"","frontmatter":{},"headers":[{"level":2,"title":"swtc-transaction is seprated package from @swtc/lib (jingtum-lib)","slug":"swtc-transaction-is-seprated-package-from-swtc-lib-jingtum-lib"},{"level":3,"title":"keeps the same interface as original without websocket dependancy","slug":"keeps-the-same-interface-as-original-without-websocket-dependancy"},{"level":3,"title":"zero config webpack and browerify","slug":"zero-config-webpack-and-browerify"},{"level":3,"title":"adds transaction builds and submit","slug":"adds-transaction-builds-and-submit"},{"level":3,"title":"support multiple Remote including @swtc/lib(websocket) and swtc-api(api)","slug":"support-multiple-remote-including-swtc-lib-websocket-and-swtc-api-api"},{"level":2,"title":"Changes","slug":"changes"},{"level":2,"title":"Getting and Using swtc-transaction","slug":"getting-and-using-swtc-transaction"},{"level":2,"title":"Using swtc-transaction","slug":"using-swtc-transaction"},{"level":2,"title":"example","slug":"example"},{"level":2,"title":"Involving swtc-transaction","slug":"involving-swtc-transaction"}],"relativePath":"docs/swtctx/index.md","lastUpdated":1631583982730}',p={},o=[a('<h1 id="swtc-transaction" tabindex="-1">swtc-transaction <a class="header-anchor" href="#swtc-transaction" aria-hidden="true">#</a></h1><h2 id="swtc-transaction-is-seprated-package-from-swtc-lib-jingtum-lib" tabindex="-1">swtc-transaction is seprated package from @swtc/lib (jingtum-lib) <a class="header-anchor" href="#swtc-transaction-is-seprated-package-from-swtc-lib-jingtum-lib" aria-hidden="true">#</a></h2><blockquote><h3 id="keeps-the-same-interface-as-original-without-websocket-dependancy" tabindex="-1">keeps the <strong>same interface</strong> as original without <strong>websocket</strong> dependancy <a class="header-anchor" href="#keeps-the-same-interface-as-original-without-websocket-dependancy" aria-hidden="true">#</a></h3><h3 id="zero-config-webpack-and-browerify" tabindex="-1">zero config <strong>webpack</strong> and <strong>browerify</strong> <a class="header-anchor" href="#zero-config-webpack-and-browerify" aria-hidden="true">#</a></h3><h3 id="adds-transaction-builds-and-submit" tabindex="-1">adds transaction builds and submit <a class="header-anchor" href="#adds-transaction-builds-and-submit" aria-hidden="true">#</a></h3><h3 id="support-multiple-remote-including-swtc-lib-websocket-and-swtc-api-api" tabindex="-1">support multiple <strong>Remote</strong> including @swtc/lib(websocket) and swtc-api(api) <a class="header-anchor" href="#support-multiple-remote-including-swtc-lib-websocket-and-swtc-api-api" aria-hidden="true">#</a></h3></blockquote><h2 id="changes" tabindex="-1">Changes <a class="header-anchor" href="#changes" aria-hidden="true">#</a></h2><ul><li>add contract operations</li><li>add method signPromise() and submitPromise()</li><li>typescript OrderBook</li><li>typescript support</li><li>add methods buildRelationTx()</li><li>support null Remote, swtc-api Remote and @swtc/lib Remote</li><li>add method submitApi() to submit transactions to <a href="https://api.jingtum.com" target="_blank" rel="noopener noreferrer">https://api.jingtum.com</a> by default</li><li>add methods buildPaymentTx(), buildOfferCreateTX(), buildOfferCancelTx()</li><li>seperate package from @swtc/lib</li></ul><h2 id="getting-and-using-swtc-transaction" tabindex="-1">Getting and Using <code>swtc-transaction</code> <a class="header-anchor" href="#getting-and-using-swtc-transaction" aria-hidden="true">#</a></h2><p><strong>Via npm for Node.js</strong></p><div class="language-bash"><pre><code>  $ <span class="token function">npm</span> <span class="token function">install</span> @swtc/transaction  // node.js and web app\n</code></pre></div><div class="language-javascript"><pre><code><span class="token keyword">const</span> Transaction <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/transaction&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Transaction <span class="token comment">// cjs import</span>\n<span class="token comment">// or</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Transaction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@swtc/transaction&quot;</span> <span class="token comment">// esm import</span>\n</code></pre></div><h2 id="using-swtc-transaction" tabindex="-1">Using <code>swtc-transaction</code> <a class="header-anchor" href="#using-swtc-transaction" aria-hidden="true">#</a></h2><ul><li><code>const tx = Transaction.buildPaymentTx(options)</code></li><li><code>const tx = Transaction.buildPaymentTx(options, remote={})</code></li><li><code>const tx = Transaction.buildPaymentTx(options, remote={_axios: axios.create({})})</code></li><li><code>const tx = Transaction.buildOfferCreateTx(options, remote={})</code></li><li><code>const tx = Transaction.buildOfferCancelTx(options, remote={})</code></li><li>local sign and submit</li></ul><div class="language-javascript"><pre><code>tx<span class="token punctuation">.</span><span class="token function">addMemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// optional</span>\ntx<span class="token punctuation">.</span><span class="token function">setSecret</span><span class="token punctuation">(</span><span class="token string">&quot;s......................&quot;</span><span class="token punctuation">)</span>\ntx<span class="token punctuation">.</span><span class="token function">setSequence</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment">// optional, automatic during signing</span>\ntx<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token comment">// async function</span>\ntx<span class="token punctuation">.</span><span class="token function">submitApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// returns promise</span>\n</code></pre></div><h2 id="example" tabindex="-1">example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token operator">&gt;</span> tx <span class="token operator">=</span> <span class="token constant">TX</span><span class="token punctuation">.</span><span class="token function">buildPaymentTx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>source<span class="token operator">:</span> <span class="token constant">DATA</span><span class="token punctuation">.</span>address<span class="token punctuation">,</span> to<span class="token operator">:</span> <span class="token constant">DATA</span><span class="token punctuation">.</span>address2<span class="token punctuation">,</span> amount<span class="token operator">:</span> <span class="token punctuation">{</span>value<span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span> currency<span class="token operator">:</span> <span class="token string">&#39;SWT&#39;</span><span class="token punctuation">,</span> issuer<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\nTransaction <span class="token punctuation">{</span>\n  domain<span class="token operator">:</span>\n   Domain <span class="token punctuation">{</span>\n     domain<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n     _events<span class="token operator">:</span>\n      <span class="token punctuation">[</span>Object<span class="token operator">:</span> <span class="token keyword">null</span> prototype<span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        removeListener<span class="token operator">:</span> <span class="token punctuation">[</span>Function<span class="token operator">:</span> updateExceptionCapture<span class="token punctuation">]</span><span class="token punctuation">,</span>\n        newListener<span class="token operator">:</span> <span class="token punctuation">[</span>Function<span class="token operator">:</span> updateExceptionCapture<span class="token punctuation">]</span><span class="token punctuation">,</span>\n        error<span class="token operator">:</span> <span class="token punctuation">[</span>Function<span class="token operator">:</span> debugDomainError<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n     _eventsCount<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n     _maxListeners<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n     members<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  _events<span class="token operator">:</span> <span class="token punctuation">[</span>Object<span class="token operator">:</span> <span class="token keyword">null</span> prototype<span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  _eventsCount<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  _maxListeners<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n  _remote<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  _token<span class="token operator">:</span> <span class="token string">&#39;swt&#39;</span><span class="token punctuation">,</span>\n  tx_json<span class="token operator">:</span>\n   <span class="token punctuation">{</span> Flags<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n     Fee<span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>\n     TransactionType<span class="token operator">:</span> <span class="token string">&#39;Payment&#39;</span><span class="token punctuation">,</span>\n     Account<span class="token operator">:</span> <span class="token string">&#39;jGxW97eCqxfAWvmqSgNkwc2apCejiM89bG&#39;</span><span class="token punctuation">,</span>\n     Amount<span class="token operator">:</span> <span class="token string">&#39;100000&#39;</span><span class="token punctuation">,</span>\n     Destination<span class="token operator">:</span> <span class="token string">&#39;jLvo6LSKNEYJ4KDwDuM8LU5fuSsQkE4HVW&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  _filter<span class="token operator">:</span> <span class="token punctuation">[</span>Function<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  _secret<span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span>\n<span class="token operator">&gt;</span> tx<span class="token punctuation">.</span><span class="token function">setSecret</span><span class="token punctuation">(</span><span class="token constant">DATA</span><span class="token punctuation">.</span>secret<span class="token punctuation">)</span>\n<span class="token keyword">undefined</span>\n<span class="token operator">&gt;</span> tx<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span>\n<span class="token keyword">undefined</span>\n<span class="token operator">&gt;</span> <span class="token keyword">null</span> <span class="token string">&#39;120000220000000024000002326140000000000186A0684000000000002710732102197F1426BCA2F59B6B910F0391E55888B4FE80AF962478493104A33274B1B03A74473045022100F0175B4AFF5B1E348FC46A8C0021FF22B16CF87113C0B6E042174374416B071102203CB8A47A82576B69DB50051DF943C87872BB8F065A2D12B01ACA03890FAC8E548114AF09183A11AA70DA06E115E03B0E5478232740B58314DA976A4DE4827163F062B09050832D8D78025D5A&#39;</span>\n\n<span class="token operator">&gt;</span> tx<span class="token punctuation">.</span>tx_json\n<span class="token punctuation">{</span> Flags<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  Fee<span class="token operator">:</span> <span class="token number">0.01</span><span class="token punctuation">,</span>\n  TransactionType<span class="token operator">:</span> <span class="token string">&#39;Payment&#39;</span><span class="token punctuation">,</span>\n  Account<span class="token operator">:</span> <span class="token string">&#39;jGxW97eCqxfAWvmqSgNkwc2apCejiM89bG&#39;</span><span class="token punctuation">,</span>\n  Amount<span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>\n  Destination<span class="token operator">:</span> <span class="token string">&#39;jLvo6LSKNEYJ4KDwDuM8LU5fuSsQkE4HVW&#39;</span><span class="token punctuation">,</span>\n  Sequence<span class="token operator">:</span> <span class="token number">562</span><span class="token punctuation">,</span>\n  SigningPubKey<span class="token operator">:</span>\n   <span class="token string">&#39;02197F1426BCA2F59B6B910F0391E55888B4FE80AF962478493104A33274B1B03A&#39;</span><span class="token punctuation">,</span>\n  TxnSignature<span class="token operator">:</span>\n   <span class="token string">&#39;3045022100F0175B4AFF5B1E348FC46A8C0021FF22B16CF87113C0B6E042174374416B071102203CB8A47A82576B69DB50051DF943C87872BB8F065A2D12B01ACA03890FAC8E54&#39;</span><span class="token punctuation">,</span>\n  blob<span class="token operator">:</span>\n   <span class="token string">&#39;120000220000000024000002326140000000000186A0684000000000002710732102197F1426BCA2F59B6B910F0391E55888B4FE80AF962478493104A33274B1B03A74473045022100F0175B4AFF5B1E348FC46A8C0021FF22B16CF87113C0B6E042174374416B071102203CB8A47A82576B69DB50051DF943C87872BB8F065A2D12B01ACA03890FAC8E548114AF09183A11AA70DA06E115E03B0E5478232740B58314DA976A4DE4827163F062B09050832D8D78025D5A&#39;</span> <span class="token punctuation">}</span>\n<span class="token operator">&gt;</span> tx<span class="token punctuation">.</span><span class="token function">submitApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span>\nPromise <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n  statusText<span class="token operator">:</span> <span class="token string">&#39;OK&#39;</span><span class="token punctuation">,</span>\n  data<span class="token operator">:</span>\n   <span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n     status_code<span class="token operator">:</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span>\n     engine_result<span class="token operator">:</span> <span class="token string">&#39;tesSUCCESS&#39;</span><span class="token punctuation">,</span>\n     engine_result_code<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n     engine_result_message<span class="token operator">:</span>\n      <span class="token string">&#39;The transaction was applied. Only final in a validated ledger.&#39;</span><span class="token punctuation">,</span>\n     tx_blob<span class="token operator">:</span>\n      <span class="token string">&#39;120000220000000024000002326140000000000186A0684000000000002710732102197F1426BCA2F59B6B910F0391E55888B4FE80AF962478493104A33274B1B03A74473045022100F0175B4AFF5B1E348FC46A8C0021FF22B16CF87113C0B6E042174374416B071102203CB8A47A82576B69DB50051DF943C87872BB8F065A2D12B01ACA03890FAC8E548114AF09183A11AA70DA06E115E03B0E5478232740B58314DA976A4DE4827163F062B09050832D8D78025D5A&#39;</span><span class="token punctuation">,</span>\n     tx_json<span class="token operator">:</span>\n      <span class="token punctuation">{</span> Account<span class="token operator">:</span> <span class="token string">&#39;jGxW97eCqxfAWvmqSgNkwc2apCejiM89bG&#39;</span><span class="token punctuation">,</span>\n        Amount<span class="token operator">:</span> <span class="token string">&#39;100000&#39;</span><span class="token punctuation">,</span>\n        Destination<span class="token operator">:</span> <span class="token string">&#39;jLvo6LSKNEYJ4KDwDuM8LU5fuSsQkE4HVW&#39;</span><span class="token punctuation">,</span>\n        Fee<span class="token operator">:</span> <span class="token string">&#39;10000&#39;</span><span class="token punctuation">,</span>\n        Flags<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n        Sequence<span class="token operator">:</span> <span class="token number">562</span><span class="token punctuation">,</span>\n        SigningPubKey<span class="token operator">:</span>\n         <span class="token string">&#39;02197F1426BCA2F59B6B910F0391E55888B4FE80AF962478493104A33274B1B03A&#39;</span><span class="token punctuation">,</span>\n        TransactionType<span class="token operator">:</span> <span class="token string">&#39;Payment&#39;</span><span class="token punctuation">,</span>\n        TxnSignature<span class="token operator">:</span>\n         <span class="token string">&#39;3045022100F0175B4AFF5B1E348FC46A8C0021FF22B16CF87113C0B6E042174374416B071102203CB8A47A82576B69DB50051DF943C87872BB8F065A2D12B01ACA03890FAC8E54&#39;</span><span class="token punctuation">,</span>\n        hash<span class="token operator">:</span>\n         <span class="token string">&#39;48D94F52CD0D9FD60634DEB5886D27149551235BD6CDA1C752F817C3290C327B&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n\n<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="involving-swtc-transaction" tabindex="-1">Involving <code>swtc-transaction</code> <a class="header-anchor" href="#involving-swtc-transaction" aria-hidden="true">#</a></h2><p><strong>Build from the source and test</strong></p><div class="language-bash"><pre><code>  $ <span class="token function">git</span> clone https://github.com/swtcca/swtclib.git\n  $ <span class="token function">npm</span> <span class="token function">install</span><span class="token punctuation">;</span> <span class="token function">npm</span> run <span class="token builtin class-name">test</span>\n</code></pre></div><hr>',18)];p.render=function(a,t,p,e,c,i){return n(),s("div",null,o)};export{t as __pageData,p as default};
