import{o as n,c as s,e as a}from"./app.1312ad2f.js";const t='{"title":"移动开发","description":"","frontmatter":{},"headers":[{"level":2,"title":"移动开发","slug":"移动开发"}],"relativePath":"docs/wallet/mobile.md","lastUpdated":1631590649773}',p={},o=[a('<h2 id="移动开发" tabindex="-1">移动开发 <a class="header-anchor" href="#移动开发" aria-hidden="true">#</a></h2><details class="details custom-block"><summary>移动开发支持</summary><div class="language-shell"><pre><code>Documents xcliu$ tns create bipapp --js\nDocuments xcliu$ <span class="token builtin class-name">cd</span> bipapp\nbipapp xcliu$ <span class="token function">npm</span> <span class="token function">install</span> bip32 bip39 @swtc/wallet @swtc/nativescript\nbipapp xcliu$ <span class="token builtin class-name">echo</span> <span class="token string">&quot;更新webpack配置 更新程序引入bip和swtc&quot;</span>\nbipapp xcliu$ <span class="token function">git</span> <span class="token function">diff</span>\n<span class="token function">diff</span> --git a/webpack.config.js b/webpack.config.js\nindex 59360c3<span class="token punctuation">..</span>e6583c2 <span class="token number">100644</span>\n--- a/webpack.config.js\n+++ b/webpack.config.js\n@@ -120,7 +120,7 @@ module.exports <span class="token operator">=</span> <span class="token function">env</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n                 <span class="token variable"><span class="token variable">`</span>node_modules/$<span class="token punctuation">{</span>coreModulesPackageName<span class="token punctuation">}</span><span class="token variable">`</span></span>,\n                 <span class="token string">&quot;node_modules&quot;</span>,\n             <span class="token punctuation">]</span>,\n-            alias,\n+            alias: Object.assign<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span>, alias, require<span class="token punctuation">(</span><span class="token string">&quot;@swtc/nativescript&quot;</span><span class="token punctuation">)</span>.aliases<span class="token punctuation">)</span>,\n             // resolve symlinks to symlinked modules\n             symlinks: <span class="token boolean">true</span>\n         <span class="token punctuation">}</span>,\n@@ -134,6 +134,7 @@ module.exports <span class="token operator">=</span> <span class="token function">env</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n             <span class="token string">&quot;timers&quot;</span><span class="token builtin class-name">:</span> false,\n             <span class="token string">&quot;setImmediate&quot;</span><span class="token builtin class-name">:</span> false,\n             <span class="token string">&quot;fs&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;empty&quot;</span>,\n+            <span class="token string">&quot;process&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;mock&quot;</span>,\n             <span class="token string">&quot;__dirname&quot;</span><span class="token builtin class-name">:</span> false,\n         <span class="token punctuation">}</span>,\n         devtool: hiddenSourceMap ? <span class="token string">&quot;hidden-source-map&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">(</span>sourceMap ? <span class="token string">&quot;inline-source-map&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">)</span>,\n@@ -225,7 +226,7 @@ module.exports <span class="token operator">=</span> <span class="token function">env</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n             // Define useful constants like TNS_WEBPACK\n             new webpack.DefinePlugin<span class="token punctuation">(</span><span class="token punctuation">{</span>\n                 <span class="token string">&quot;global.TNS_WEBPACK&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;true&quot;</span>,\n-                <span class="token string">&quot;process&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;global.process&quot;</span>,\n+                // <span class="token string">&quot;process&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;global.process&quot;</span>,\n             <span class="token punctuation">}</span><span class="token punctuation">)</span>,\n             // Remove all files from the out dir.\n             new CleanWebpackPlugin<span class="token punctuation">(</span>itemsToClean, <span class="token punctuation">{</span> verbose: <span class="token operator">!</span><span class="token operator">!</span>verbose <span class="token punctuation">}</span><span class="token punctuation">)</span>,\nbipapp xcliu$ <span class="token function">git</span> <span class="token function">diff</span> app\n<span class="token function">diff</span> --git a/app/main-view-model.js b/app/main-view-model.js\nindex 0903f55<span class="token punctuation">..</span>046e416 <span class="token number">100755</span>\n--- a/app/main-view-model.js\n+++ b/app/main-view-model.js\n@@ -1,21 +1,37 @@\n const Observable <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&quot;tns-core-modules/data/observable&quot;</span><span class="token punctuation">)</span>.Observable<span class="token punctuation">;</span>\n+const <span class="token punctuation">{</span> Wallet <span class="token punctuation">}</span> <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&quot;@swtc/wallet&quot;</span><span class="token punctuation">)</span>\n+const bip32 <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&quot;bip32&quot;</span><span class="token punctuation">)</span>\n+const bip39 <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&quot;bip39&quot;</span><span class="token punctuation">)</span>\n+bip39.setDefaultWordlist<span class="token punctuation">(</span><span class="token string">&#39;chinese_simplified&#39;</span><span class="token punctuation">)</span>\n+let b32\n\n-function getMessage<span class="token punctuation">(</span>counter<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n+function getMessage<span class="token punctuation">(</span>counter, mnemonic, seed, b32<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token keyword">if</span> <span class="token punctuation">(</span>counter <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n         <span class="token builtin class-name">return</span> <span class="token string">&quot;Hoorraaay! You unlocked the NativeScript clicker achievement!&quot;</span><span class="token punctuation">;</span>\n     <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n-        <span class="token builtin class-name">return</span> <span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span>counter<span class="token punctuation">}</span> taps left<span class="token variable">`</span></span><span class="token punctuation">;</span>\n+        <span class="token builtin class-name">return</span> <span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span>counter<span class="token punctuation">}</span> $<span class="token punctuation">{</span>mnemonic<span class="token punctuation">}</span>\n+                       bip39: $<span class="token punctuation">{</span>seed<span class="token punctuation">}</span>\n+                               bip32: $<span class="token punctuation">{</span>b32<span class="token punctuation">}</span>\n+               <span class="token variable">`</span></span><span class="token punctuation">;</span>\n     <span class="token punctuation">}</span>\n <span class="token punctuation">}</span>\n\n <span class="token keyword">function</span> <span class="token function-name function">createViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     const viewModel <span class="token operator">=</span> new Observable<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     viewModel.counter <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>\n-    viewModel.message <span class="token operator">=</span> getMessage<span class="token punctuation">(</span>viewModel.counter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n+    viewModel.mnemonic <span class="token operator">=</span> bip39.generateMnemonic<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n+       viewModel.seed <span class="token operator">=</span> bip39.mnemonicToSeedSync<span class="token punctuation">(</span>viewModel.mnemonic<span class="token punctuation">)</span>\n+    b32 <span class="token operator">=</span> bip32.fromSeed<span class="token punctuation">(</span>viewModel.seed<span class="token punctuation">)</span>\n+    viewModel.b32 <span class="token operator">=</span> b32.privateKey\n+    viewModel.message <span class="token operator">=</span> getMessage<span class="token punctuation">(</span>viewModel.counter, viewModel.mnemonic, viewModel.seed.toString<span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span>, viewModel.b32.toString<span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">))</span><span class="token punctuation">;</span>\n\n     viewModel.onTap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n         viewModel.counter--<span class="token punctuation">;</span>\n-        viewModel.set<span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span>, getMessage<span class="token punctuation">(</span>viewModel.counter<span class="token punctuation">))</span><span class="token punctuation">;</span>\n+        viewModel.mnemonic <span class="token operator">=</span> bip39.generateMnemonic<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n+           viewModel.seed <span class="token operator">=</span> bip39.mnemonicToSeedSync<span class="token punctuation">(</span>viewModel.mnemonic<span class="token punctuation">)</span>\n+        b32 <span class="token operator">=</span> bip32.fromSeed<span class="token punctuation">(</span>viewModel.seed<span class="token punctuation">)</span>\n+        viewModel.b32 <span class="token operator">=</span> b32.privateKey\n+        viewModel.set<span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span>, getMessage<span class="token punctuation">(</span>viewModel.counter, viewModel.mnemonic, viewModel.seed.toString<span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span>, viewModel.b32.toString<span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">))</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token builtin class-name">return</span> viewModel<span class="token punctuation">;</span>\nbipapp xcliu$ tns run android\n</code></pre></div></details>',2)];p.render=function(a,t,p,e,c,u){return n(),s("div",null,o)};export{t as __pageData,p as default};
