import{o as e,c as a,e as l}from"./app.4dcb24bf.js";const i='{"title":"DAPP Examples Using Javascript and @SWTC/LIB","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用@swtc/lib","slug":"使用-swtc-lib"},{"level":2,"title":"单行代码操作","slug":"单行代码操作"},{"level":2,"title":"示例内容","slug":"示例内容"},{"level":2,"title":"CONSOLE 应用","slug":"console-应用"},{"level":2,"title":"WEB 应用","slug":"web-应用"},{"level":2,"title":"DESKTOP 应用","slug":"desktop-应用"},{"level":2,"title":"MOBILE 应用","slug":"mobile-应用"},{"level":2,"title":"时髦使用方式","slug":"时髦使用方式"},{"level":2,"title":"相关知识","slug":"相关知识"}],"relativePath":"docs/examples/index.md","lastUpdated":1631590646661}',t={},r=[l('<h1 id="dapp-examples-using-javascript-and-swtc-lib" tabindex="-1">DAPP Examples Using Javascript and @SWTC/LIB <a class="header-anchor" href="#dapp-examples-using-javascript-and-swtc-lib" aria-hidden="true">#</a></h1><p><div class="table-of-contents"><ul><li><a href="#使用-swtc-lib">使用@swtc/lib</a></li><li><a href="#单行代码操作">单行代码操作</a></li><li><a href="#示例内容">示例内容</a></li><li><a href="#console-应用">CONSOLE 应用</a></li><li><a href="#web-应用">WEB 应用</a></li><li><a href="#desktop-应用">DESKTOP 应用</a></li><li><a href="#mobile-应用">MOBILE 应用</a></li><li><a href="#时髦使用方式">时髦使用方式</a></li><li><a href="#相关知识">相关知识</a></li></ul></div></p><h2 id="使用-swtc-lib" tabindex="-1">使用@swtc/lib <a class="header-anchor" href="#使用-swtc-lib" aria-hidden="true">#</a></h2><ul><li>正常情况下，所有实例使用的 node.js 为最新的 LTS 版本</li><li>正常情况下，所有显式安装的包使用缺省的最新版本</li><li>正常情况下，我们使用<a href="./C00/">脚本方式运行</a></li><li>用 npm 安装</li></ul><div class="language-bash"><pre><code>$ <span class="token function">npm</span> <span class="token function">install</span> @swtc/lib\n</code></pre></div><ul><li>浏览器直接引用 <ul><li>CDN 直接引用 <ul><li><code>&lt;script src=&#39;https://unpkg.com/@swtc/lib&#39;&gt;&lt;/script&gt;</code></li><li>或者 <code>&lt;script src=&#39;https://cdn.jsdelivr.net/npm/@swtc/lib&#39;&gt;&lt;/script&gt;</code></li></ul></li><li>可以 <a href="https://github.com/swtcca/swtclib" target="_blank" rel="noopener noreferrer">自行编译</a></li><li>不建议使用此方式</li><li>建议使用 <a href="./W03/">webpack 打包</a> 方式替代</li></ul></li><li>常规导入</li></ul><div class="language-javascript"><pre><code><span class="token keyword">const</span> Wallet <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/lib&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Wallet\n<span class="token keyword">const</span> Remote <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@swtc/lib&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Remote\n</code></pre></div><h2 id="单行代码操作" tabindex="-1">单行代码操作 <a class="header-anchor" href="#单行代码操作" aria-hidden="true">#</a></h2><ol start="0"><li>导入钱包/库 <blockquote><ul><li><code>const Remote = require(&#39;@swtc/lib&#39;).Remote</code></li><li><code>import { Remote } from &#39;@swtc/lib&#39;</code></li></ul></blockquote></li><li>创建 remote 对象 <blockquote><p><code>const remote = new (require(&#39;@swtc/lib&#39;).Remote)()</code></p></blockquote></li></ol><blockquote><p><code>const remote_test = new (require(&#39;@swtc/lib&#39;).Remote)({server: &#39;ws://ts5.jingtum.com:5030&#39;, issuer: &#39;jBciDE8Q3uJjf111VeiUNM775AMKHEbBLS&#39;})</code> 2. 连接服务器 <code>remote.connectPromise().then(console.log).catch(console.error)</code> 3. 获取帐本 <code>remote.requestLedgerClosed().submitPromise().then(console.log)</code> 4. 获取交易 <code>remote.requestTx({hash: &#39;hash&#39;}).submitPromise().then(console.log)</code> 5. 获取帐号信息 <code>remote.requestAccountInfo({account: &#39;address&#39;}).submitPromise().then(console.log)</code> 6. 获得账号可接收和发送的货币 <code>remote.requestAccountTums({account: &#39;address&#39;}).submitPromise().then(console.log)</code> 7. 支付 <code>remote.buildPaymentTx({source: &#39;address1&#39;, to: &#39;address2&#39;, amount: remote.makeAmount(1)}).submitPromise(&#39;secret&#39;, &#39;memo&#39;).then(console.log)</code> 8. 挂单 <code>remote.buildOfferCreateTx({type: &#39;Sell&#39;, account: &#39;address&#39;, taker_gets: remote.makeAmount(1), taker_pays: remote.makeAmount(0.01, &#39;cnt&#39;)}).submitPromise(&#39;secret&#39;, &#39;memo&#39;).then(console.log).catch(console.error)</code> 9. 查询挂单 <code>remote.requestAccountOffers({account: DATA.address}).submitPromise().then(console.log)</code> 10. 撤单 <code>remote.buildOfferCancelTx({ account: &#39;address&#39;, sequence: offerSequence}).submitPromise(&#39;secret&#39;, &#39;memo&#39;).then(console.log)</code> 11. 获取信任 <code>remote.requestAccountRelations({type: &#39;trust&#39;, account: &#39;address&#39;}).submitPromise().then(console.log)</code> 12. 获取授权 <code>remote.requestAccountRelations({type: &#39;authorize&#39;, account: &#39;address&#39;}).submitPromise().then(console.log)</code> 13. 设置信任 <code>remote.buildRelationTx({type: &#39;trust&#39;, account: &#39;address&#39;, target; &#39;issuer&#39;, limit: remote.makeAmount(10000, &#39;CNY&#39;)}).submitPromise(&#39;secret&#39;, &#39;memo&#39;).then(console.log)</code> 14. 设置授权 <code>remote.buildRelationTx({type: &#39;authorize&#39;, account: &#39;address&#39;, target; &#39;address2&#39;, limit: remote.makeAmunt(1000, &#39;CNY&#39;)}).submitPromise(&#39;secret&#39;, &#39;memo&#39;).then(console.log)</code> 15. 获得市场挂单列表 <code>remote.requestOrderBook({gets: remote.makeCurrency(), pays: remote.makeCurrency(&#39;cnt&#39;)}).submitPromise().then(console.log).catch(console.error)</code></p></blockquote><h2 id="示例内容" tabindex="-1">示例内容 <a class="header-anchor" href="#示例内容" aria-hidden="true">#</a></h2><ul><li>[x] 展示 wallet 的创建</li><li>[x] 展示最新的帐本信息</li><li>[x] 查询价格</li><li>[-] 查询余额</li><li>[-] 赞助支付</li></ul><h2 id="console-应用" tabindex="-1">CONSOLE 应用 <a class="header-anchor" href="#console-应用" aria-hidden="true">#</a></h2><blockquote><ul><li>node.js 运行时环境</li><li>常运行于服务器</li><li>常运行于终端中</li></ul></blockquote><ul><li><a href="./C00/">C00 相关说明</a></li><li><a href="./C01/">C01 常规终端示例</a></li></ul><h2 id="web-应用" tabindex="-1">WEB 应用 <a class="header-anchor" href="#web-应用" aria-hidden="true">#</a></h2><blockquote><ul><li>浏览器运行时环境</li><li>常运行于客户端</li><li>常运行于浏览器中</li></ul></blockquote><ul><li><a href="./W00/">W00 相关说明</a></li><li><a href="./W01/">W01 浏览器终端示例</a></li><li><a href="./W02/">W02 常规 WEB 示例</a></li><li><a href="./W03/">W03 打包 WEB 示例</a></li><li><a href="./W04/">W04 React Web 示例</a></li><li><a href="./W05/">W05 Vue Web 示例</a></li><li><a href="./W06/">W06 Angular Web 示例</a></li><li>W07 weex Web 示例</li><li>W08 nuxt 示例</li></ul><h2 id="desktop-应用" tabindex="-1">DESKTOP 应用 <a class="header-anchor" href="#desktop-应用" aria-hidden="true">#</a></h2><blockquote><ul><li>通常浏览器运行时环境</li><li>通常将 web 应用打包成桌面应用</li><li>通常跨平台兼容</li></ul></blockquote><ul><li><a href="./D00/">D00 相关说明</a></li><li><a href="./D01/">D01 Electron 示例</a></li></ul><h2 id="mobile-应用" tabindex="-1">MOBILE 应用 <a class="header-anchor" href="#mobile-应用" aria-hidden="true">#</a></h2><blockquote><ul><li>通常翻译成移动设备自身运行时环境</li><li>react native | Facebook</li><li>flutter | Google</li><li>nativescript | Telerik</li><li>weex | Apache</li></ul></blockquote><ul><li><a href="./M00/">M00 相关说明</a></li><li>Nativescript 示例</li><li><a href="./M02/">M02 Nativescript Vue 示例</a></li><li>Nativescript Angular 示例</li><li>React Native 示例</li><li>Flutter 示例</li><li>Weex 示例</li></ul><h2 id="时髦使用方式" tabindex="-1">时髦使用方式 <a class="header-anchor" href="#时髦使用方式" aria-hidden="true">#</a></h2><blockquote><ul><li><a href="./A00/">A00 相关说明</a></li><li><a href="./A01/">A01 esm 方式导入</a></li><li><a href="./A02/">A02 承诺 promisify</a></li><li><a href="./A03/">A03 同步 async/await</a></li><li><a href="./A04/">A04 Typescript</a></li><li><a href="./A05/">A05 KOA</a></li><li>终端图形界面</li></ul></blockquote><h2 id="相关知识" tabindex="-1">相关知识 <a class="header-anchor" href="#相关知识" aria-hidden="true">#</a></h2><blockquote><h4 id="终端-包括-windows-的命令行窗口和-unix-的命令行终端" tabindex="-1">终端 包括 Windows 的命令行窗口和 Unix 的命令行终端 <a class="header-anchor" href="#终端-包括-windows-的命令行窗口和-unix-的命令行终端" aria-hidden="true">#</a></h4><h4 id="浏览器-和浏览器的-javascript-console" tabindex="-1">浏览器 和浏览器的 javascript console <a class="header-anchor" href="#浏览器-和浏览器的-javascript-console" aria-hidden="true">#</a></h4><h4 id="移动设备-安卓和苹果的手机以及应用" tabindex="-1">移动设备 安卓和苹果的手机以及应用 <a class="header-anchor" href="#移动设备-安卓和苹果的手机以及应用" aria-hidden="true">#</a></h4><h4 id="html-和-css" tabindex="-1">HTML 和 CSS <a class="header-anchor" href="#html-和-css" aria-hidden="true">#</a></h4><h4 id="node-js-以及-npm-包管理程序" tabindex="-1">Node.js 以及 npm 包管理程序 <a class="header-anchor" href="#node-js-以及-npm-包管理程序" aria-hidden="true">#</a></h4><h4 id="javascript-的运行环境-包括-node-js-和浏览器" tabindex="-1">Javascript 的运行环境 包括 node.js 和浏览器 <a class="header-anchor" href="#javascript-的运行环境-包括-node-js-和浏览器" aria-hidden="true">#</a></h4><h4 id="打包-bundle-工具-webpack" tabindex="-1">打包(bundle)工具 webpack <a class="header-anchor" href="#打包-bundle-工具-webpack" aria-hidden="true">#</a></h4><h4 id="javascript-标准和流行的方便的新特性" tabindex="-1">Javascript 标准和流行的方便的新特性 <a class="header-anchor" href="#javascript-标准和流行的方便的新特性" aria-hidden="true">#</a></h4><h4 id="转换-transpile-工具-babel" tabindex="-1">转换(transpile)工具 babel <a class="header-anchor" href="#转换-transpile-工具-babel" aria-hidden="true">#</a></h4><h4 id="桌面应用-electron" tabindex="-1">桌面应用 electron <a class="header-anchor" href="#桌面应用-electron" aria-hidden="true">#</a></h4><h4 id="前端框架-angular-react-vue-js" tabindex="-1">前端框架 angular, react, vue.js <a class="header-anchor" href="#前端框架-angular-react-vue-js" aria-hidden="true">#</a></h4><h4 id="移动应用-nativescript-react-flutter" tabindex="-1">移动应用 nativescript, react, flutter <a class="header-anchor" href="#移动应用-nativescript-react-flutter" aria-hidden="true">#</a></h4></blockquote><h4 id="强烈推荐-廖雪峰的零基础-javascript-全栈教程" tabindex="-1">强烈推荐 <a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="noopener noreferrer">廖雪峰的零基础 Javascript 全栈教程</a> <a class="header-anchor" href="#强烈推荐-廖雪峰的零基础-javascript-全栈教程" aria-hidden="true">#</a></h4>',29)];t.render=function(l,i,t,s,o,c){return e(),a("div",null,r)};export{i as __pageData,t as default};
